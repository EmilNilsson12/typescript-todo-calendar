{"version":3,"sources":["utils/compareByDate.js","Components/TodoView/TodoView.tsx","Components/ListTodosForDay.tsx","Components/AllTodos.tsx","Components/DailyTodos/DailyTodos.tsx","Components/TodoForm/TodoForm.tsx","Components/CalenderView/DayOfMonth/DayOfMonth.js","Components/CalenderView/WeekDays/WeekDays.js","Components/CalenderView/CalenderView.js","App.tsx","index.tsx"],"names":["compareByDates","a","b","returnValue","aDate","moment","deadline","bDate","isBefore","console","log","TodoView","props","useState","confirmDeleteVisible","setConfirmDeleteVisible","todoObj","toggleCompleteTodo","deleteTodo","beginEdit","className","completed","title","description","onClick","id","ListTodosForDay","todos","allTodos","updateMomentObjCallback","evt","timeComponent","toISOString","split","clickedDate","target","innerText","map","todo","AllTodos","sortedAndByDueDate","sort","setOfTodoDates","Set","add","setOfTodoDatesArr","Array","from","filteredTodosByDate","date","push","filter","returnArr","dateWithTodos","length","mapReturnArr","DailyTodos","currentDayInFocus","sortedByTime","format","TodoForm","initialDeadline","inputTitle","setInputTitle","inputDesc","setInputDesc","inputDate","setInputDate","clone","inputDateValue","setInputDateValue","useEffect","onSubmit","preventDefault","newTimeComponent","addTodo","concat","uuidv4","type","value","onChange","required","autoFocus","dateComponent","datePlusTime","newDate","DayOfMonth","day","placeHolder","today","active","cbFunc","numOfTodos","dayValues","isHoliday","isFlagDay","generateNotches","WeekDays","divs","i","weekDay","set","renderDivs","CalenderView","callBack","momentObj","toString","currentTime","setCurrentTime","currentYear","setCurrentYear","setLoadingState","localStorage","getItem","setItem","fetch","then","res","json","data","JSON","stringify","dagar","fetchData","dateClicked","textContent","parseInt","parentNode","newMomentObj","subtract","components","numOfPlaceholderDays","startOf","daysInMonth","itIsToday","itIsActive","getNumOfTodosDueThisDay","getDayObject","renderDays","compareDate","todosDueThisDay","incompleteTodosDueThisDay","activeDayAsInt","todayObj","todayAsInt","todayFormattedDate","todayFormattedMonth","todayFormattedYear","momentObjFormattedMonth","momentObjFormattedYear","dayAsInt","yearNum","monthNum","datehNum","dayInArray","parse","find","datum","App","setTodos","setCurrentDayInFocus","newObj","lsString","lsParsed","crudOperations","customHookSetTodos","skipMe","todoToBeUpdated","updateTodo","updatedTodoObj","copyOfTodos","array","hookCallback","object","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.76335405.chunk.js","sourcesContent":["import moment from 'moment';\r\nexport default function compareByDates(a, b) {\r\n\tconst aDate = moment(a.deadline);\r\n\tconst bDate = moment(b.deadline);\r\n\r\n\tlet returnValue;\r\n\taDate.isBefore(bDate)\r\n\t\t? (returnValue = -1)\r\n\t\t: bDate.isBefore(aDate)\r\n\t\t? (returnValue = 1)\r\n\t\t: (returnValue = 0);\r\n\tconsole.log('returnValue: ', returnValue);\r\n\r\n\treturn returnValue;\r\n}\r\n","import { useState } from 'react';\r\nimport './TodoView.css';\r\n\r\nimport { FaEdit, FaTrashAlt, FaCheck, FaCheckCircle } from 'react-icons/fa';\r\n\r\nimport { Todo } from '../../types';\r\ninterface Props {\r\n\ttodoObj: Todo;\r\n\ttoggleCompleteTodo: (param: Todo) => void;\r\n\tbeginEdit: (param: Todo) => void;\r\n\tdeleteTodo: (param: String) => void;\r\n}\r\n\r\nfunction TodoView(props: Props) {\r\n\tconst [confirmDeleteVisible, setConfirmDeleteVisible] = useState(false);\r\n\r\n\tconst { todoObj, toggleCompleteTodo, beginEdit, deleteTodo } = props;\r\n\r\n\tconst handleCompleteTodo = () => {\r\n\t\ttoggleCompleteTodo(todoObj);\r\n\t};\r\n\r\n\tconst handleUpdateTodo = () => {\r\n\t\tbeginEdit(todoObj);\r\n\t};\r\n\r\n\tconst handleDeleteTodo = () => {\r\n\t\tsetConfirmDeleteVisible(true);\r\n\t};\r\n\r\n\tconst cancelConfirmDeleteTodo = () => {\r\n\t\tsetConfirmDeleteVisible(false);\r\n\t};\r\n\r\n\tconst confirmDeleteTodo = () => {\r\n\t\tdeleteTodo(todoObj.id);\r\n\t\tsetConfirmDeleteVisible(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={`\r\n\t\t\ttodo-view\r\n\t\t\t${todoObj.completed ? 'todo-completed' : ''}\r\n\t\t`}\r\n\t\t>\r\n\t\t\t<div>\r\n\t\t\t\t<h4>{todoObj.title}</h4>\r\n\t\t\t\t{todoObj.description ? <p>{todoObj.description}</p> : <></>}\r\n\t\t\t</div>\r\n\t\t\t<div className='todo-btns'>\r\n\t\t\t\t{confirmDeleteVisible ? (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<button onClick={cancelConfirmDeleteTodo}>Cancel delete</button>\r\n\t\t\t\t\t\t<button onClick={confirmDeleteTodo}>Confirm delete</button>\r\n\t\t\t\t\t</>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<button onClick={handleDeleteTodo}>\r\n\t\t\t\t\t\t\t<FaTrashAlt />\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t{/* <button onClick={handleUpdateTodo}>\r\n\t\t\t\t\t\t\t<FaEdit />\r\n\t\t\t\t\t\t</button> */}\r\n\t\t\t\t\t\t<button onClick={handleCompleteTodo}>\r\n\t\t\t\t\t\t\t{todoObj.completed ? <FaCheckCircle /> : <FaCheck />}\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default TodoView;\r\n","import TodoView from './TodoView/TodoView';\r\n\r\nimport { Todo } from '../types';\r\nimport moment, { Moment } from 'moment';\r\ninterface Props {\r\n\ttodos: Array<Todo>;\r\n\tallTodos: Boolean;\r\n\tupdateMomentObjCallback: (date: Moment) => void;\r\n\ttoggleCompleteTodo: (obj: Todo) => void;\r\n\tbeginEdit: (obj: Todo) => void;\r\n\tdeleteTodo: (id: String) => void;\r\n}\r\n\r\nfunction ListTodosForDay(props: Props) {\r\n\tconst {\r\n\t\ttodos,\r\n\t\tallTodos,\r\n\t\tupdateMomentObjCallback,\r\n\t\ttoggleCompleteTodo,\r\n\t\tbeginEdit,\r\n\t\tdeleteTodo,\r\n\t} = props;\r\n\r\n\tconst handleClick = (evt: any) => {\r\n\t\tconst timeComponent = moment().toISOString().split('T')[1];\r\n\t\tconst clickedDate = moment(evt.target.innerText + 'T' + timeComponent);\r\n\r\n\t\tupdateMomentObjCallback(clickedDate);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='DailyTodos'>\r\n\t\t\t{allTodos ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t{' '}\r\n\t\t\t\t\tJump to {'-->'}\r\n\t\t\t\t\t<button onClick={handleClick}>\r\n\t\t\t\t\t\t{todos[0]?.deadline?.split('T')[0]}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</>\r\n\t\t\t) : (\r\n\t\t\t\t<></>\r\n\t\t\t)}\r\n\t\t\t{todos.map((todo) => (\r\n\t\t\t\t<TodoView\r\n\t\t\t\t\tkey={todo.id}\r\n\t\t\t\t\ttodoObj={todo}\r\n\t\t\t\t\ttoggleCompleteTodo={toggleCompleteTodo}\r\n\t\t\t\t\tbeginEdit={beginEdit}\r\n\t\t\t\t\tdeleteTodo={deleteTodo}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ListTodosForDay;\r\n","import compareByDates from '../utils/compareByDate';\r\n\r\nimport ListTodosForDay from './ListTodosForDay';\r\n\r\nimport { Todo } from '../types';\r\nimport { Moment } from 'moment';\r\ninterface Props {\r\n\ttodos: Array<Todo>;\r\n\tupdateMomentObjCallback: (date: Moment) => void;\r\n\ttoggleCompleteTodo: (obj: Todo) => void;\r\n\tbeginEdit: (obj: Todo) => void;\r\n\tdeleteTodo: (id: String) => void;\r\n}\r\n\r\nconst AllTodos = (props: Props) => {\r\n\tconst {\r\n\t\ttodos,\r\n\t\tupdateMomentObjCallback,\r\n\t\ttoggleCompleteTodo,\r\n\t\tbeginEdit,\r\n\t\tdeleteTodo,\r\n\t} = props;\r\n\r\n\t// Sort all todos by date\r\n\tlet sortedAndByDueDate = [...todos.sort(compareByDates)];\r\n\r\n\t// Creata new Set of all dates with todos\r\n\tconst setOfTodoDates = new Set();\r\n\tfor (const todo of sortedAndByDueDate) {\r\n\t\tsetOfTodoDates.add(todo.deadline.split('T')[0]);\r\n\t}\r\n\tconst setOfTodoDatesArr = Array.from(setOfTodoDates);\r\n\r\n\t// Create array of arrays\r\n\tconst filteredTodosByDate: any = [];\r\n\tfor (const date of setOfTodoDatesArr) {\r\n\t\tfilteredTodosByDate.push(\r\n\t\t\tsortedAndByDueDate.filter((todo) => todo.deadline.split('T')[0] === date)\r\n\t\t);\r\n\t}\r\n\r\n\tconst mapReturnArr = () => {\r\n\t\tconst returnArr = [];\r\n\r\n\t\tfor (const dateWithTodos of filteredTodosByDate) {\r\n\t\t\treturnArr.push(\r\n\t\t\t\t<ListTodosForDay\r\n\t\t\t\t\tkey={dateWithTodos[0].deadline}\r\n\t\t\t\t\tupdateMomentObjCallback={updateMomentObjCallback}\r\n\t\t\t\t\tallTodos={true}\r\n\t\t\t\t\ttodos={dateWithTodos}\r\n\t\t\t\t\ttoggleCompleteTodo={toggleCompleteTodo}\r\n\t\t\t\t\tbeginEdit={beginEdit}\r\n\t\t\t\t\tdeleteTodo={deleteTodo}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn returnArr.length ? (\r\n\t\t\treturnArr\r\n\t\t) : (\r\n\t\t\t<div className='AllTodos'>No todos yet...</div>\r\n\t\t);\r\n\t};\r\n\treturn (\r\n\t\t<div className='AllTodos'>\r\n\t\t\t<h2>All todos</h2>\r\n\t\t\t{mapReturnArr()}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default AllTodos;\r\n","import ListTodosForDay from '../ListTodosForDay';\r\n\r\nimport './DailyTodos.css';\r\n\r\nimport compareByDates from '../../utils/compareByDate';\r\n\r\nimport { Moment } from 'moment';\r\nimport { Todo } from '../../types';\r\ninterface Props {\r\n\ttodos: Array<Todo>;\r\n\tcurrentDayInFocus: Moment;\r\n\tupdateMomentObjCallback: (date: Moment) => void;\r\n\ttoggleCompleteTodo: (obj: Todo) => void;\r\n\tbeginEdit: (obj: Todo) => void;\r\n\tdeleteTodo: (id: String) => void;\r\n}\r\n\r\nfunction DailyTodos(props: Props) {\r\n\tconst {\r\n\t\ttodos,\r\n\t\tcurrentDayInFocus,\r\n\t\tupdateMomentObjCallback,\r\n\t\ttoggleCompleteTodo,\r\n\t\tbeginEdit,\r\n\t\tdeleteTodo,\r\n\t} = props;\r\n\r\n\tlet sortedByTime = [...todos.sort(compareByDates)];\r\n\r\n\treturn (\r\n\t\t<div className='DailyTodos'>\r\n\t\t\t<h2>\r\n\t\t\t\tTodos due:{' '}\r\n\t\t\t\t<span className='current-day-in-focus-header'>\r\n\t\t\t\t\t{currentDayInFocus.format('YYYY-MM-DD')}\r\n\t\t\t\t</span>\r\n\t\t\t</h2>\r\n\t\t\t<ListTodosForDay\r\n\t\t\t\ttodos={sortedByTime}\r\n\t\t\t\tupdateMomentObjCallback={updateMomentObjCallback}\r\n\t\t\t\tallTodos={false}\r\n\t\t\t\ttoggleCompleteTodo={toggleCompleteTodo}\r\n\t\t\t\tbeginEdit={beginEdit}\r\n\t\t\t\tdeleteTodo={deleteTodo}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default DailyTodos;\r\n","import { useState, useEffect } from 'react';\r\n\r\nimport moment, { Moment } from 'moment';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport './TodoForm.css';\r\n\r\nimport { Todo } from '../../types';\r\ninterface Props {\r\n\tinitialDeadline: Moment;\r\n\taddTodo(todoObj: Todo): void;\r\n}\r\n\r\nfunction TodoForm(props: Props) {\r\n\tconst { initialDeadline } = props;\r\n\r\n\tconst [inputTitle, setInputTitle] = useState('');\r\n\tconst [inputDesc, setInputDesc] = useState('');\r\n\tconst [inputDate, setInputDate] = useState(initialDeadline);\r\n\tconst [inputDateValue, setInputDateValue] = useState(\r\n\t\tinitialDeadline.clone().toISOString().split('T')[0]\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetInputDate(initialDeadline);\r\n\t\tsetInputDateValue(initialDeadline.clone().toISOString().split('T')[0]);\r\n\t}, [initialDeadline]);\r\n\r\n\t// inputDate and inputDateValue should update when the form is mounted\r\n\t// and when dayToShow is updated\r\n\r\n\t// dayToShow needs to be anything other than an object\r\n\r\n\tconst handleSubmit = (evt: any) => {\r\n\t\tevt.preventDefault();\r\n\r\n\t\t// Get current timestamp\r\n\t\tconst newTimeComponent = moment().toISOString().split('T')[1];\r\n\t\t/* \r\n\t\tif (updateMode) {\r\n\t\t\tsetCurrentlyUpdating(false);\r\n\r\n\t\t\t// Send new updateObj to App.js\r\n\t\t\tupdateTodo({\r\n\t\t\t\ttitle: inputTitle,\r\n\t\t\t\tdescription: inputDesc,\r\n\t\t\t\tdeadline: inputDate\r\n\t\t\t\t\t.toISOString()\r\n\t\t\t\t\t.split('T')[0]\r\n\t\t\t\t\t.concat('T', newTimeComponent),\r\n\t\t\t\tid: updateParams.id,\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\taddTodo({\r\n\t\t\t\ttitle: inputTitle,\r\n\t\t\t\tdescription: inputDesc,\r\n\t\t\t\tdeadline: inputDate\r\n\t\t\t\t\t.toISOString()\r\n\t\t\t\t\t.split('T')[0]\r\n\t\t\t\t\t.concat('T', newTimeComponent),\r\n\t\t\t\tid: uuidv4(),\r\n\t\t\t});\r\n\t\t} */\r\n\r\n\t\tprops.addTodo({\r\n\t\t\ttitle: inputTitle,\r\n\t\t\tdescription: inputDesc,\r\n\t\t\tdeadline: inputDate\r\n\t\t\t\t.toISOString()\r\n\t\t\t\t.split('T')[0]\r\n\t\t\t\t.concat('T', newTimeComponent),\r\n\t\t\tcompleted: false,\r\n\t\t\tid: uuidv4(),\r\n\t\t\t// title: 'String',\r\n\t\t\t// description: 'String',\r\n\t\t\t// deadline: 'String',\r\n\t\t\t// completed: false,\r\n\t\t\t// id: uuidv4(),\r\n\t\t});\r\n\r\n\t\tsetInputTitle('');\r\n\t\tsetInputDesc('');\r\n\t\tsetInputDate(moment());\r\n\t\tsetInputDateValue(inputDate.clone().toISOString().split('T')[0]);\r\n\t};\r\n\r\n\tconst handleTitleChange = ({ target }: any) => {\r\n\t\tsetInputTitle(target.value);\r\n\t};\r\n\r\n\tconst handleDescriptionChange = ({ target }: any) => {\r\n\t\tsetInputDesc(target.value);\r\n\t};\r\n\r\n\tconst handleDateChange = ({ target }: any) => {\r\n\t\tlet dateComponent = target.value;\r\n\r\n\t\tlet timeComponent = moment(inputDate).toISOString().split('T')[1];\r\n\r\n\t\tlet datePlusTime = dateComponent + 'T' + timeComponent;\r\n\r\n\t\tlet newDate = moment(datePlusTime);\r\n\r\n\t\tsetInputDate(newDate);\r\n\t\tsetInputDateValue(dateComponent);\r\n\t};\r\n\tconst cancelUpdate = () => {\r\n\t\tsetInputTitle('');\r\n\t\tsetInputDesc('');\r\n\t\tsetInputDate(props.initialDeadline);\r\n\t\tsetInputDateValue(moment().toISOString().split('T')[0]);\r\n\t};\r\n\treturn (\r\n\t\t<div className='TodoFormContainer'>\r\n\t\t\t<form onSubmit={handleSubmit} className='TodoForm'>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<label>Title</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tvalue={inputTitle}\r\n\t\t\t\t\t\tonChange={handleTitleChange}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t/>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<label>Additional info</label>\r\n\t\t\t\t\t<textarea value={inputDesc} onChange={handleDescriptionChange} />\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<label>\r\n\t\t\t\t\t\tDeadline: {/* <b>{inputDate.endOf('days').fromNow()}</b> */}\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='date'\r\n\t\t\t\t\t\tvalue={inputDateValue}\r\n\t\t\t\t\t\tonChange={handleDateChange}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t</p>\r\n\t\t\t\t<div className='submit-btn-div'>\r\n\t\t\t\t\t<button type='submit'>Add new Todo</button>\r\n\t\t\t\t\t{/* {updateMode && (\r\n\t\t\t\t\t<button type='button' onClick={cancelUpdate}>\r\n\t\t\t\t\t\tCancel\r\n\t\t\t\t\t</button>\r\n\t\t\t\t)} */}\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default TodoForm;\r\n","function DayOfMonth({\r\n\tday,\r\n\tplaceHolder,\r\n\ttoday,\r\n\tactive,\r\n\tcbFunc,\r\n\tnumOfTodos,\r\n\tdayValues,\r\n}) {\r\n\tconst generateNotches = () => {\r\n\t\tlet innerText;\r\n\t\tif (numOfTodos[0] > 0) {\r\n\t\t\tif (numOfTodos[1] > 0) {\r\n\t\t\t\tinnerText = `${numOfTodos[1]} todo${numOfTodos[1] > 1 ? 's' : ''} due!`;\r\n\t\t\t} else {\r\n\t\t\t\tinnerText = 'All todos done!';\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn innerText;\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{placeHolder ? (\r\n\t\t\t\t<div className='placeholder grid-child'></div>\r\n\t\t\t) : (\r\n\t\t\t\t<button\r\n\t\t\t\t\tid={day + '|day of this month'}\r\n\t\t\t\t\tclassName={`\r\n\t\t\t\t\t\tday-div\r\n\t\t\t\t\t\tgrid-child\r\n\t\t\t\t\t\t${active ? 'active-day' : ''}\r\n\t\t\t\t\t\t${numOfTodos[0] > 0 ? 'has-todos' : ''}\r\n\t\t\t\t\t\t${numOfTodos[0] > 0 && numOfTodos[1] === 0 ? 'all-todos-done' : ''}\r\n\t\t\t\t\t\t${today ? 'today' : ''}\r\n\t\t\t\t\t\t${isHoliday(dayValues) ? 'is-holiday' : ''}\r\n\t\t\t\t\t\t${isFlagDay(dayValues) ? 'is-flag-day' : ''}\r\n\t\t\t\t\t`}\r\n\t\t\t\t\tonClick={cbFunc}\r\n\t\t\t\t>\r\n\t\t\t\t\t{numOfTodos ? (\r\n\t\t\t\t\t\t<div className='notch-container'>{generateNotches()}</div>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<> </>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<div className='date-num'>{day}</div>\r\n\t\t\t\t</button>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default DayOfMonth;\r\n\r\nfunction isHoliday(dayValues) {\r\n\tif (dayValues) {\r\n\t\treturn dayValues['röd dag'] === 'Ja' || dayValues['arbetsfri dag'] === 'Ja';\r\n\t} else {\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nfunction isFlagDay(dayValues) {\r\n\tif (dayValues) {\r\n\t\treturn dayValues['flaggdag'] !== '';\r\n\t} else {\r\n\t\treturn false;\r\n\t}\r\n}\r\n","import moment from 'moment';\r\nfunction WeekDays() {\r\n\tconst renderDivs = () => {\r\n\t\tconst divs = [];\r\n\r\n\t\tfor (let i = 0; i < 7; i++) {\r\n\t\t\tconst weekDay = moment();\r\n\t\t\tweekDay.set('day', i);\r\n\t\t\tdivs.push(\r\n\t\t\t\t<div className='week-day-label' key={weekDay.format('dddd')}>\r\n\t\t\t\t\t{weekDay.format('dddd')}\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn divs;\r\n\t};\r\n\treturn <div className='grid-container week-days'>{renderDivs()}</div>;\r\n}\r\n\r\nexport default WeekDays;\r\n","import { useState, useEffect } from 'react';\r\nimport './CalenderView.css';\r\n\r\nimport moment from 'moment';\r\n\r\nimport DayOfMonth from './DayOfMonth/DayOfMonth';\r\nimport WeekDays from './WeekDays/WeekDays';\r\n\r\nfunction CalenderView({ todos, callBack, momentObj }) {\r\n\t// Today should only change when the user manually refreshes the page\r\n\tconst [today, setToday] = useState(moment());\r\n\tconst [currentTime, setCurrentTime] = useState(\r\n\t\ttoday.toString().split(' ')[4]\r\n\t);\r\n\r\n\tconst [currentYear, setCurrentYear] = useState(\r\n\t\tmomentObj.clone().format('YYYY')\r\n\t);\r\n\r\n\tconst [loadingState, setLoadingState] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tasync function fetchData() {\r\n\t\t\t// Only update state if the calendar shows a new year\r\n\t\t\tif (currentYear !== momentObj.clone().format('YYYY')) {\r\n\t\t\t\tsetCurrentYear(momentObj.clone().format('YYYY'));\r\n\t\t\t}\r\n\r\n\t\t\t// Make sure to only fetch from the API once a year\r\n\t\t\tif (!localStorage.getItem(`year-${currentYear}`)) {\r\n\t\t\t\t// Add the current year to LS to prevent multiple fetches for the same year\r\n\t\t\t\tlocalStorage.setItem(`year-${currentYear}`, currentYear);\r\n\r\n\t\t\t\tawait fetch(`https://sholiday.faboul.se/dagar/v2.1/${currentYear}`)\r\n\t\t\t\t\t.then((res) => {\r\n\t\t\t\t\t\treturn res.json();\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.then(async (data) => {\r\n\t\t\t\t\t\t// Add the fetched holidays to LS\r\n\t\t\t\t\t\tawait localStorage.setItem(\r\n\t\t\t\t\t\t\t`year-${currentYear}-holidays`,\r\n\t\t\t\t\t\t\tJSON.stringify(data.dagar)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tsetLoadingState(false);\r\n\t\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tsetLoadingState(false);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfetchData();\r\n\t}, [currentYear, momentObj]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetCurrentTime(momentObj.toString().split(' ')[4]);\r\n\t}, [momentObj]);\r\n\r\n\tconst prevMonth = () => {\r\n\t\tconst dateComponent = momentObj\r\n\t\t\t.clone()\r\n\t\t\t.subtract(1, 'M')\r\n\t\t\t.toISOString()\r\n\t\t\t.split('T')[0];\r\n\r\n\t\tconst newMomentObj = moment(dateComponent + 'T' + currentTime);\r\n\t\tcallBack(newMomentObj);\r\n\t};\r\n\r\n\tconst nextMonth = () => {\r\n\t\tconst dateComponent = momentObj\r\n\t\t\t.clone()\r\n\t\t\t.add(1, 'M')\r\n\t\t\t.toISOString()\r\n\t\t\t.split('T')[0];\r\n\r\n\t\tconst newMomentObj = moment(dateComponent + 'T' + currentTime);\r\n\t\tcallBack(newMomentObj);\r\n\t};\r\n\r\n\tconst dateClicked = ({ target }) => {\r\n\t\tlet clickedDate;\r\n\t\tif (target.textContent === '|') {\r\n\t\t\tclickedDate = parseInt(target.parentNode.parentNode.id.split('|')[0]);\r\n\t\t} else if (target.id === '') {\r\n\t\t\tclickedDate = parseInt(target.parentNode.id.split('|')[0]);\r\n\t\t} else {\r\n\t\t\tclickedDate = parseInt(target.id.split('|')[0]);\r\n\t\t}\r\n\r\n\t\tconst dateComponent = momentObj\r\n\t\t\t.clone()\r\n\t\t\t.date(clickedDate)\r\n\t\t\t.toISOString()\r\n\t\t\t.split('T')[0];\r\n\r\n\t\tconst newMomentObj = moment(dateComponent + 'T' + currentTime);\r\n\t\tcallBack(newMomentObj);\r\n\t};\r\n\r\n\tconst renderDays = () => {\r\n\t\tconst components = [];\r\n\r\n\t\t// Get weekday of first of month as int to create \"shadow-days\" when a month doesnt start on a sunday\r\n\t\tconst numOfPlaceholderDays = momentObj.clone().startOf('month').format('e');\r\n\t\tfor (let i = 1; i <= numOfPlaceholderDays; i++) {\r\n\t\t\tcomponents.push(\r\n\t\t\t\t<DayOfMonth key={`null ${i} of month`} placeHolder={true} />\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tfor (let i = 1; i <= momentObj.daysInMonth(); i++) {\r\n\t\t\tcomponents.push(\r\n\t\t\t\t<DayOfMonth\r\n\t\t\t\t\tkey={`Day ${i} of month`}\r\n\t\t\t\t\tplaceHolder={false}\r\n\t\t\t\t\tday={i}\r\n\t\t\t\t\t// Today is only true when it's today\r\n\t\t\t\t\ttoday={itIsToday(today, momentObj, i)}\r\n\t\t\t\t\tactive={itIsActive(momentObj, i)}\r\n\t\t\t\t\tcbFunc={dateClicked}\r\n\t\t\t\t\tnumOfTodos={getNumOfTodosDueThisDay(momentObj, todos, i)}\r\n\t\t\t\t\tdayValues={getDayObject(momentObj, i)}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn components;\r\n\t};\r\n\treturn (\r\n\t\t<div className='calendar'>\r\n\t\t\t<div className='month-view'>\r\n\t\t\t\t<div className='month-navigator'>\r\n\t\t\t\t\t<button onClick={prevMonth}>Prev month</button>\r\n\t\t\t\t\t<h2 className='current-month'>\r\n\t\t\t\t\t\t<i>\r\n\t\t\t\t\t\t\t{momentObj.format('MMMM')} - {momentObj.format('YYYY')}\r\n\t\t\t\t\t\t</i>\r\n\t\t\t\t\t</h2>\r\n\t\t\t\t\t<button onClick={nextMonth}>Next month</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<WeekDays />\r\n\t\t\t\t<div className='grid-container calender-days'>{renderDays()}</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t{/* <p>Loading...</p> */}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default CalenderView;\r\n\r\nfunction getNumOfTodosDueThisDay(momentObj, todos, i) {\r\n\tconst compareDate = momentObj.clone().set('date', i).format('YYYY-MM-DD');\r\n\r\n\t// Get totalnumber of todos for this day\r\n\tconst todosDueThisDay = todos.filter(\r\n\t\t(todo) => todo.deadline.split('T')[0] === compareDate\r\n\t);\r\n\r\n\t// Get number of incomplete todos for this day\r\n\tconst incompleteTodosDueThisDay = todosDueThisDay.filter(\r\n\t\t(todo) => !todo.completed\r\n\t);\r\n\r\n\tconst totalNum = todosDueThisDay.length;\r\n\tconst incompleteNum = incompleteTodosDueThisDay.length;\r\n\treturn [totalNum, incompleteNum];\r\n}\r\n\r\nfunction itIsActive(momentObj, activeDayAsInt) {\r\n\tconst activeDayFormatted = parseInt(momentObj.clone().format('D'), 10);\r\n\treturn activeDayFormatted === activeDayAsInt;\r\n}\r\n\r\nfunction itIsToday(todayObj, momentObj, todayAsInt) {\r\n\tconst todayFormattedDate = parseInt(todayObj.clone().format('D'), 10);\r\n\tconst todayFormattedMonth = parseInt(todayObj.clone().format('MM'), 10);\r\n\tconst todayFormattedYear = parseInt(todayObj.clone().format('YYYY'), 10);\r\n\r\n\tconst momentObjFormattedMonth = parseInt(momentObj.clone().format('MM'), 10);\r\n\tconst momentObjFormattedYear = parseInt(momentObj.clone().format('YYYY'), 10);\r\n\r\n\treturn (\r\n\t\ttodayFormattedDate === todayAsInt &&\r\n\t\ttodayFormattedMonth === momentObjFormattedMonth &&\r\n\t\ttodayFormattedYear === momentObjFormattedYear\r\n\t);\r\n}\r\n\r\nfunction getDayObject(momentObj, dayAsInt) {\r\n\tlet yearNum;\r\n\tlet monthNum;\r\n\tlet datehNum;\r\n\tif (dayAsInt > 0) {\r\n\t\tyearNum = momentObj.clone().format('YYYY').toString();\r\n\t\tmonthNum = momentObj.clone().format('MM').toString();\r\n\t\tdatehNum = momentObj.clone().set('date', dayAsInt).format('DD').toString();\r\n\t} else {\r\n\t\tyearNum = momentObj.clone().format('YYYY').toString();\r\n\t\tmonthNum = momentObj.clone().format('MM').toString();\r\n\t\tdatehNum = momentObj.clone().format('DD').toString();\r\n\t}\r\n\r\n\tlet dayInArray;\r\n\tif (localStorage.getItem(`year-${yearNum}-holidays`)) {\r\n\t\tdayInArray = JSON.parse(\r\n\t\t\tlocalStorage.getItem(`year-${yearNum}-holidays`)\r\n\t\t).find((day) => day.datum === `${yearNum}-${monthNum}-${datehNum}`);\r\n\t}\r\n\r\n\treturn dayInArray;\r\n}\r\n","import { FunctionComponent, useEffect, useState } from 'react';\r\nimport './App.css';\r\n\r\nimport AllTodos from './Components/AllTodos';\r\nimport DailyTodos from './Components/DailyTodos/DailyTodos';\r\nimport TodoForm from './Components/TodoForm/TodoForm';\r\nimport CalenderView from './Components/CalenderView/CalenderView';\r\n\r\nimport moment, { Moment } from 'moment';\r\n\r\nimport { Todo } from './types';\r\ninterface TodoArr {\r\n\ttodos: Array<Todo>;\r\n}\r\n\r\nconst App: FunctionComponent = () => {\r\n\tconst [todos, setTodos] = useState<TodoArr['todos']>([\r\n\t\t{\r\n\t\t\ttitle: 'Intervju med Emil',\r\n\t\t\tdescription: '',\r\n\t\t\tdeadline: '2021-10-06T09:26:23.673Z',\r\n\t\t\tcompleted: true,\r\n\t\t\tid: 'e1a17603-bda9-434f-974a-36ebc9b9b924',\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Kolla Emils Github',\r\n\t\t\tdescription: '',\r\n\t\t\tdeadline: '2021-10-07T09:26:11.289Z',\r\n\t\t\tcompleted: false,\r\n\t\t\tid: 'c42914d7-77c4-45b3-88ef-f4a196a1c95a',\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Ta helg!',\r\n\t\t\tdescription: '',\r\n\t\t\tdeadline: '2021-10-09T09:27:23.570Z',\r\n\t\t\tcompleted: false,\r\n\t\t\tid: '61fe12a4-c115-4407-8e05-0bcb2199f40f',\r\n\t\t},\r\n\t]);\r\n\tconst [currentDayInFocus, setCurrentDayInFocus] = useState(() => moment());\r\n\r\n\tconst updateMomentObjCallback = (newObj: Moment) => {\r\n\t\tsetCurrentDayInFocus(newObj);\r\n\t};\r\n\r\n\t// Initial assignment\r\n\tuseEffect(() => {\r\n\t\tif (!localStorage.getItem('todos')) {\r\n\t\t\tlocalStorage.setItem('todos', JSON.stringify(todos));\r\n\t\t} else {\r\n\t\t\tconst lsString = localStorage.getItem('todos');\r\n\t\t\tconst lsParsed = JSON.parse(lsString || '[]');\r\n\t\t\tsetTodos(lsParsed);\r\n\t\t}\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tlocalStorage.setItem('todos', JSON.stringify(todos));\r\n\t}, [todos]);\r\n\r\n\tconst handleTodoAdd = (todoObj: Todo) => {\r\n\t\tconsole.log('Button clicked');\r\n\t\tconst copyOfTodos: TodoArr['todos'] = [...todos, todoObj];\r\n\t\tconsole.log('copyOfTodos: ', copyOfTodos);\r\n\t\tsetTodos(copyOfTodos);\r\n\t\tlocalStorage.setItem('todos', JSON.stringify(todos));\r\n\t};\r\n\r\n\tconst crudOperations = {\r\n\t\taddTodo: (todoObj: Todo) => {\r\n\t\t\t// Make copy of todos array\r\n\t\t\tconst copyOfTodos = [...todos];\r\n\r\n\t\t\tcustomHookSetTodos(copyOfTodos, setTodos, todoObj);\r\n\t\t},\r\n\t\tdeleteTodo: (id: String) => {\r\n\t\t\t// Make copy of todos array\r\n\t\t\t// and filter out the deleted todo\r\n\t\t\tconst copyOfTodos = [...todos].filter((todo) => todo.id !== id);\r\n\r\n\t\t\t// Replace todos with copyOfTodos\r\n\t\t\tcustomHookSetTodos(copyOfTodos, setTodos, { skipMe: true });\r\n\t\t},\r\n\t\ttoggleCompleteTodo: ({ id }: Todo) => {\r\n\t\t\t// Find relevant entry from saved todos\r\n\t\t\tconst todoToBeUpdated = todos.find((todo) => todo.id === id);\r\n\r\n\t\t\tif (todoToBeUpdated) {\r\n\t\t\t\t// Update completed-property to opposite of its inital value\r\n\t\t\t\ttodoToBeUpdated.completed = !todoToBeUpdated.completed;\r\n\t\t\t}\r\n\r\n\t\t\t// Make copy of todos array\r\n\t\t\t// and filter out the deleted todo\r\n\t\t\tconst copyOfTodos = [...todos].filter((todo) => todo.id !== id);\r\n\r\n\t\t\tcustomHookSetTodos(copyOfTodos, setTodos, todoToBeUpdated);\r\n\t\t},\r\n\t\tupdateTodo: (updatedTodoObj: Todo) => {\r\n\t\t\t// Make copy of todos array\r\n\t\t\t// and filter out the deleted todo\r\n\t\t\tconst copyOfTodos = [...todos].filter(\r\n\t\t\t\t(todo) => todo.id !== updatedTodoObj.id\r\n\t\t\t);\r\n\r\n\t\t\tcustomHookSetTodos(copyOfTodos, setTodos, updatedTodoObj);\r\n\t\t},\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='App container'>\r\n\t\t\t<AllTodos\r\n\t\t\t\ttodos={todos}\r\n\t\t\t\tupdateMomentObjCallback={updateMomentObjCallback}\r\n\t\t\t\ttoggleCompleteTodo={crudOperations.toggleCompleteTodo}\r\n\t\t\t\tbeginEdit={crudOperations.updateTodo}\r\n\t\t\t\tdeleteTodo={crudOperations.deleteTodo}\r\n\t\t\t/>\r\n\t\t\t<CalenderView\r\n\t\t\t\ttodos={todos}\r\n\t\t\t\tcallBack={updateMomentObjCallback}\r\n\t\t\t\tmomentObj={currentDayInFocus}\r\n\t\t\t/>\r\n\t\t\t<TodoForm initialDeadline={currentDayInFocus} addTodo={handleTodoAdd} />\r\n\t\t\t<DailyTodos\r\n\t\t\t\ttodos={todos.filter(\r\n\t\t\t\t\t(todo) =>\r\n\t\t\t\t\t\ttodo.deadline.split('T')[0] ===\r\n\t\t\t\t\t\tcurrentDayInFocus.format('YYYY-MM-DD')\r\n\t\t\t\t)}\r\n\t\t\t\tupdateMomentObjCallback={updateMomentObjCallback}\r\n\t\t\t\tcurrentDayInFocus={currentDayInFocus}\r\n\t\t\t\ttoggleCompleteTodo={crudOperations.toggleCompleteTodo}\r\n\t\t\t\tbeginEdit={crudOperations.updateTodo}\r\n\t\t\t\tdeleteTodo={crudOperations.deleteTodo}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n\r\nfunction customHookSetTodos(\r\n\tarray: Todo[],\r\n\thookCallback: (array: Todo[]) => void,\r\n\tobject: any\r\n) {\r\n\t// Add new version of object to array\r\n\t// unless object is missing\r\n\tif (!object.skipMe) array.push(object);\r\n\r\n\t// Replace todos with copyOfTodos\r\n\thookCallback(array);\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n"],"sourceRoot":""}